{"version":3,"sources":["p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/HW5.module.css"],"names":["module","exports","Header","useState","collapsed","setCollapsed","className","s","containerNav","navLinks","navLinksAll","onClick","link","to","collapsedButton","onMouseMove","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","children","onDoubleClick","restSpanProps","span","src","SuperButton","red","finalClassName","default","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","containerSpan","undefined","containerButton","PreJunior","Error404","SuperSelect","options","onChangeOption","styleOption","color","mappedOptions","map","o","i","selected","style","margin","borderColor","borderRadius","SuperRadio","name","onChangeCallback","marginLeft","checked","arr","HW7","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.eb121c5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerSpan\":\"SuperEditableSpan_containerSpan__vcp9N\",\"containerButton\":\"SuperEditableSpan_containerButton__1GgG1\",\"span\":\"SuperEditableSpan_span__3VVCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3LhNX\",\"errorInput\":\"SuperInputText_errorInput__1lqhX\",\"error\":\"SuperInputText_error__o6qiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1smaF\",\"red\":\"SuperButton_red__BkDZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3AVPL\"};","import React, {useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './HW5.module.css'\r\n\r\nfunction Header() {\r\n    const [collapsed, setCollapsed] = useState(true)\r\n\r\n    function focusNav() {\r\n\r\n        setCollapsed(false)\r\n    }\r\n\r\n    function lossFocusNav() {\r\n\r\n        setCollapsed(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.containerNav}>\r\n            <div className={collapsed ? s.navLinks : s.navLinksAll} onClick={lossFocusNav}>\r\n                <NavLink className={s.link} to={'/pre-junior'}>ret-junior</NavLink>\r\n                <NavLink className={s.link} to={'/junior'}>junior</NavLink>\r\n                <NavLink className={s.link} to={'/junior+'}>junior+</NavLink>\r\n                <span className={s.collapsedButton} onMouseMove={focusNav}></span>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\r\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\nexport type DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className} ` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n\r\n\r\n}\r\nconst spanImg = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSvmShznIZUvegOEeYEvlGdxShi6uz9fwiKnQ&usqp=CAU'\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        <img src={spanImg} />\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\nimport s from './common/c4-SuperEditableSpan/SuperEditableSpan.module.css'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState<string>('editable-span-value', value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div className={s.containerSpan}>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text, please...'}}\r\n                />\r\n            </div>\r\n            <div className={s.containerButton}>\r\n                <SuperButton onClick={save}>save</SuperButton>\r\n                <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n\r\n            <HW6/>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent, FocusEventHandler} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    value?: any\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        value,\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const styleSelect = {\r\n        margin: '10px',\r\n        borderColor: 'orange',\r\n        borderRadius: '3px'\r\n    }\r\n    const styleOption = {\r\n        color: \"orange\"\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => {\r\n            return (\r\n                <option key={i} selected={o === value} style={styleOption} >\r\n                    {o}\r\n                </option>\r\n            )\r\n        })\r\n        : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps} style={styleSelect}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    name: string\r\n    options?: any[]\r\n    value: any\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const styleInput = {\r\n        color: 'orange',\r\n        marginLeft: '5px'\r\n    }\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i} style={{\r\n            color: 'orange',\r\n            marginLeft: '5px'\r\n        }}>\r\n            <input\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr: Array<string> = ['x', 'y', 'z']\r\n\r\n\r\nexport function HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\"\r\n\r\nimport {HW7} from \"../../h7/HW7\"\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div style={{margin: '5px'}}>\r\n            <HW7/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from \"react\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction JuniorPlus() {\r\n    return <div>\r\n        <h1>Junior+</h1>\r\n    </div>\r\n}\r\nexport default JuniorPlus","import React from 'react'\r\nimport {Redirect, Route, Switch } from 'react-router-dom'\r\nimport PreJunior from './pages/PreJunior'\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from './pages/Junior';\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior+',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\r\n            exact нужен чтоб указать полное совподение (что после '/' ничего не будет)\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                // add routes\r\n\r\n            у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerNav\":\"HW5_containerNav__251w7\",\"navLinksAll\":\"HW5_navLinksAll__tape7\",\"navLinks\":\"HW5_navLinks__3co6l\",\"collapsedButton\":\"HW5_collapsedButton__25Hrl\"};"],"sourceRoot":""}