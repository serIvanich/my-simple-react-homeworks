{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/HW5.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h1/AlternativeMessage.module.css","p2-homeworks/h8/hw8.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/AlternativeAffairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/AlternativeGreeting.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","useState","collapsed","setCollapsed","className","s","containerNav","navLinks","navLinksAll","onClick","link","to","collapsedButton","onMouseMove","Message","props","container","image","src","avatar","message","name","text","time","AlternativeMessage","timeCreate","firstElem","user","secondElem","contact","thirdElem","experience","fourthElem","skills","messageData","id","v","n","Date","toTimeString","slice","HW1","Affair","affair","buttonDelete","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","buttonContainer","all","setFilter","high","middle","low","AlternativeAffairs","buttonName","setValue","priority","setValueDelete","setAffairId","levelBlock","value","affairId","deleteAltAffairCallback","valueDelete","defaultAffairs","deleteAffair","affairs","filter","HW2","setAffairs","filteredAffairs","filterAffairs","altAffairs","setAltAffairs","setId","TextError","error","containerError","Greeting","inputClass","users","setNameCallback","addUser","totalUsers","setError","checked","setChecked","input","onChange","onFocus","onKeyPress","e","code","currentTarget","blur","inputCheckbox","type","u","GreetingContainer","addUserCallback","setName","length","test","alert","AlternativeGreeting","altUsers","addAltUser","nameValue","setNameValue","ageValue","setAgeValue","emailValue","setEmailValue","showUsersArray","setShowUsersArray","myAlert","setMyAlert","errorEnter","altContainer","nameInput","ageInput","emailInput","groupUsers","age","email","altError","myAlertContainer","HW3","setUsers","setAltUsers","newUsers","v1","SuperInputText","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","column","testSpanError","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","containerSpan","undefined","containerButton","PreJunior","Error404","SuperSelect","options","onChangeOption","styleOption","color","mappedOptions","o","i","selected","style","margin","borderColor","borderRadius","SuperRadio","onChangeCallback","arr","HW7","homeWorkReducer","action","newState","payload","sort","b","p","initialPeople","HW8","people","setPeople","finalPeople","button","Clock","timerId","setTimerId","date","setDate","show","setShow","stop","clearInterval","console","log","stringTime","stringDate","getFullYear","getMonth","getDate","onMouseEnter","onMouseLeave","height","width","padding","border","backgroundColor","window","setInterval","marginLeft","HW9","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8867ea00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__2-pm0\",\"containerError\":\"Greeting_containerError__1pmEK\",\"users\":\"Greeting_users__pZiTj\",\"altContainer\":\"Greeting_altContainer__2-rNY\",\"inputCheckbox\":\"Greeting_inputCheckbox__2-wfm\",\"ageInput\":\"Greeting_ageInput__iSmrP\",\"text\":\"Greeting_text__1o167\",\"groupUsers\":\"Greeting_groupUsers__1tQhX\",\"myAlertContainer\":\"Greeting_myAlertContainer__2-rmY\",\"myAlert\":\"Greeting_myAlert__F0iN0\",\"altError\":\"Greeting_altError__X6mKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Affairs_container___sMhn\",\"buttonDelete\":\"Affairs_buttonDelete__28LLa\",\"buttonName\":\"Affairs_buttonName__Dfxx0\",\"levelBlock\":\"Affairs_levelBlock__2y4Is\",\"buttonContainer\":\"Affairs_buttonContainer__1dC3v\",\"all\":\"Affairs_all__CLqWD\",\"high\":\"Affairs_high__1VAOQ\",\"middle\":\"Affairs_middle__2UdWu\",\"low\":\"Affairs_low__qALod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerNav\":\"HW5_containerNav__251w7\",\"navLinksAll\":\"HW5_navLinksAll__tape7\",\"navLinks\":\"HW5_navLinks__3co6l\",\"collapsedButton\":\"HW5_collapsedButton__25Hrl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__gmmhY\",\"message\":\"Message_message__1iXbA\",\"name\":\"Message_name__2Gx4I\",\"text\":\"Message_text__3GAA_\",\"time\":\"Message_time__1WoHG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AlternativeMessage_container__1OENa\",\"firstElem\":\"AlternativeMessage_firstElem__2wHCC\",\"secondElem\":\"AlternativeMessage_secondElem__2kt4b\",\"thirdElem\":\"AlternativeMessage_thirdElem__2mTfI\",\"fourthElem\":\"AlternativeMessage_fourthElem__3N-Zc\",\"time\":\"AlternativeMessage_time__2osRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"hw8_container__3-YKs\",\"button\":\"hw8_button__Evcr0\",\"name\":\"hw8_name__2yC4P\",\"age\":\"hw8_age__TvFC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerSpan\":\"SuperEditableSpan_containerSpan__vcp9N\",\"containerButton\":\"SuperEditableSpan_containerButton__1GgG1\",\"span\":\"SuperEditableSpan_span__3VVCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3LhNX\",\"errorInput\":\"SuperInputText_errorInput__1lqhX\",\"error\":\"SuperInputText_error__o6qiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2IcPa\",\"column\":\"HW4_column__1Vdu7\",\"testSpanError\":\"HW4_testSpanError__1EaAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1smaF\",\"red\":\"SuperButton_red__BkDZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1B4uj\",\"spanClassName\":\"SuperCheckbox_spanClassName__1XerK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3AVPL\"};","import React, {useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './HW5.module.css'\r\n\r\nfunction Header() {\r\n    const [collapsed, setCollapsed] = useState(true)\r\n\r\n    function focusNav() {\r\n\r\n        setCollapsed(false)\r\n    }\r\n\r\n    function lossFocusNav() {\r\n\r\n        setCollapsed(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.containerNav}>\r\n            <div className={collapsed ? s.navLinks : s.navLinksAll} onClick={lossFocusNav}>\r\n                <NavLink className={s.link} to={'/pre-junior'}>ret-junior</NavLink>\r\n                <NavLink className={s.link} to={'/junior'}>junior</NavLink>\r\n                <NavLink className={s.link} to={'/junior+'}>junior+</NavLink>\r\n                <span className={s.collapsedButton} onMouseMove={focusNav}></span>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport s from'./Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.container}>\r\n            <img className={s.image} src={props.avatar} />\r\n            <div className={s.message}>\r\n                <div className={s.name}>\r\n                    {props.name}\r\n                </div>\r\n\r\n                <div className={s.text}>\r\n                    {props.message}\r\n                </div>\r\n                <div className={s.time}>\r\n                    {props.time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport s from './AlternativeMessage.module.css'\r\nimport { UserType } from './HW1'\r\n\r\n\r\ntype AltMessagePropsType = {\r\n    timeCreate: string\r\n    user: UserType\r\n}\r\n\r\nfunction AlternativeMessage(props: AltMessagePropsType) {\r\n    return (\r\n        <div className={s.container}>\r\n\r\n            <div className={s.time}>ENTRY TIME: {props.timeCreate}</div>\r\n            <div className={s.firstElem}>\r\n                <h3>{props.user.name}</h3>\r\n            </div>\r\n            <div className={s.secondElem}>\r\n                {props.user.contact}\r\n            </div>\r\n            <div className={s.thirdElem}>\r\n                {props.user.experience}\r\n            </div>\r\n            <div className={s.fourthElem}>\r\n                {props.user.skills}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage\r\n","import React from 'react'\r\nimport Message from './Message'\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\nimport {v1 as v} from 'uuid'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nexport type UserType = {\r\n    id: string\r\n    name: string\r\n    contact: string\r\n    skills: string[]\r\n    experience: string\r\n\r\n}\r\n\r\nconst user = {\r\n    id: v(),\r\n    name: 'Serik',\r\n    contact: 'my email and other contact details',\r\n    skills: [' html ', ' css ', ' js ', ' react '],\r\n    experience: 'My experience of work...'\r\n}\r\nconst timeCreate = new Date()\r\nlet n = timeCreate.toTimeString().slice(0,8)\r\n\r\n\r\nfunction HW1() {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeMessage timeCreate={n} user={user}/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport s from './Affairs.module.css'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType// need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <>\r\n            <li >\r\n                {props.affair.name}\r\n\r\n                <button className={s.buttonDelete} onClick={deleteCallback}>x</button>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div className={s.buttonContainer}>\r\n            <div className={s.container}>\r\n\r\n                {mappedAffairs}\r\n            </div>\r\n            <button className={s.all} onClick={setAll}>All</button>\r\n            <button className={s.high} onClick={setHigh}>High</button>\r\n            <button className={s.middle} onClick={setMiddle}>Middle</button>\r\n            <button className={s.low} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React from 'react'\r\nimport {AffairType, ValueType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AltAffairsPropsType = {\r\n    data: Array<AffairType>\r\n    value: string\r\n    valueDelete: string\r\n    affairId: number | undefined\r\n    setValue: (value: ValueType) => void\r\n    setValueDelete: (valueDelete: string) => void\r\n    setAffairId: (affairId: number | undefined) => void\r\n    deleteAltAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction AlternativeAffairs(props: AltAffairsPropsType) {\r\n    function onClickDelete() {\r\n        if (props.affairId) {\r\n            props.deleteAltAffairCallback(props.affairId)\r\n            props.setValue('no active')\r\n            props.setValueDelete('no active')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {props.data.map((a: AffairType) => {\r\n                    function onClickName() {\r\n                        props.setValue(a.priority)\r\n                        props.setValueDelete(a.name)\r\n                        props.setAffairId(a._id)\r\n                    }\r\n\r\n                    return <button key={a._id} className={s.buttonName} onClick={onClickName}>{a.name}</button>\r\n                })}\r\n            </div>\r\n            <div className={s.levelBlock}>\r\n                affair completion level: {props.value}\r\n            </div>\r\n            <div className={s.levelBlock}>\r\n                delete affair <button onClick={onClickDelete}>{props.valueDelete}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeAffairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport AlternativeAffairs from \"./AlternativeAffairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low'// need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}// need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\nexport type ValueType = 'no active' | FilterType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(a => a.priority === filter)// need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)// need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    //Alternative state\r\n    const [altAffairs, setAltAffairs] = useState<Array<AffairType>>([...defaultAffairs])\r\n\r\n    const deleteAltAffairCallback = (_id: number) => setAltAffairs(deleteAffair(altAffairs, _id))\r\n\r\n    const [value, setValue] = useState<ValueType>('no active')\r\n    const [valueDelete, setValueDelete] = useState<string>('no active')\r\n    const [id, setId] = useState<number | undefined>()\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeAffairs\r\n                data={altAffairs}\r\n                value={value}\r\n                valueDelete={valueDelete}\r\n                affairId={id}\r\n                setValue={setValue}\r\n                setValueDelete={setValueDelete}\r\n                setAffairId={setId}\r\n                deleteAltAffairCallback={deleteAltAffairCallback}\r\n            />\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent, KeyboardEventHandler} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingPropsType = {\r\n    users: Array<UserType>\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    setError: (error: string) => void\r\n    checked: boolean\r\n    setChecked: (checked: boolean) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {users, name, setNameCallback, addUser, error, totalUsers, setError, checked, setChecked} // деструктуризация пропсов\r\n) => {\r\n    //remove the error text\r\n    function onFocus() {\r\n        setError('')\r\n    }\r\n\r\n    function onChecked() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n    function onPressEnter(e: KeyboardEvent<HTMLInputElement>) {\r\n\r\n        if (e.code === 'Enter') {\r\n            addUser()\r\n            e.currentTarget.blur()\r\n\r\n        }\r\n    }\r\n\r\n    let inputClass\r\n    error ? inputClass = s.error : inputClass = s.input// need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <span>Please,input correct name for added to list: </span>\r\n            <input value={name} onChange={setNameCallback} onFocus={onFocus} onKeyPress={onPressEnter}\r\n                   className={inputClass}/>\r\n            {error && <TextError error={error}/>}\r\n            <button onClick={addUser}>add</button>\r\n            <div className={s.users}>\r\n                All users on list :\r\n                <span> {totalUsers}</span>\r\n                <div>\r\n                    <input className={s.inputCheckbox} type={'checkbox'} checked={checked} onClick={onChecked} />\r\n                    our group:\r\n                    <div>\r\n                        {checked && users.map(u => <span key={u._id}>  {u.name}  </span>)}\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\ntype TextErrorPropsType = {\r\n    error: string\r\n}\r\n\r\nexport const TextError: React.FC<TextErrorPropsType> = ({error}) => {\r\n    return <div className={s.containerError}>\r\n        {error}\r\n    </div>\r\n}\r\n\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\"\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value)\r\n        // need to fix\r\n    }\r\n\r\n\r\n    const addUser = () => {\r\n        const regexpName = /^[a-zA-Z]\\w+$/\r\n\r\n        if (regexpName.test(name)) {\r\n\r\n            addUserCallback(name)\r\n            setName('')\r\n\r\n            alert(`Hello ${name}!`)\r\n\r\n        }else{setError('incorrect name input!\\nname starts with a-z!\\nmay include a number!')}// need to fix\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            users={users}\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            setError={setError}\r\n            checked={checked}\r\n            setChecked={setChecked}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default GreetingContainer\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {TextError} from \"./Greeting\";\r\nimport s from './Greeting.module.css'\r\nimport {AltUsersType} from \"./HW3\";\r\n\r\ntype AltGreetingPropsType = {\r\n    altUsers: Array<AltUsersType>\r\n    addAltUser: (name: string, age: string, email: string) => void\r\n}\r\nexport function AlternativeGreeting({altUsers, addAltUser}: AltGreetingPropsType) {\r\n    const [nameValue, setNameValue] = useState<string>('')\r\n    const [ageValue, setAgeValue] = useState<string>('')\r\n    const [emailValue, setEmailValue] = useState<string>('')\r\n    const [showUsersArray, setShowUsersArray] = useState<boolean>(false)\r\n    const [error, setError] = useState<string>('')\r\n    const [myAlert, setMyAlert] = useState<boolean>(false)\r\n\r\n\r\n    function onChangeNameValue(e: ChangeEvent<HTMLInputElement>) {\r\n        setNameValue(e.currentTarget.value)\r\n    }\r\n    function onChangeAgeValue(e: ChangeEvent<HTMLInputElement>) {\r\n        setAgeValue(e.currentTarget.value)\r\n    }\r\n    function onChangeEmailValue(e: ChangeEvent<HTMLInputElement>) {\r\n        setEmailValue(e.currentTarget.value)\r\n    }\r\n\r\n    function errorEnter(error: string) {\r\n        setError(error)\r\n    }\r\n\r\n    function onClickEnter(){\r\n\r\n        if (!/^[a-zA-Z]\\w+$/.test(nameValue)) return errorEnter('name error')\r\n        if (!/^\\d{1,2}$/.test(ageValue)) return errorEnter('age error')\r\n        if (!/^\\w+@\\w+.\\w+.\\w*$/.test(emailValue)) return errorEnter('email error')\r\n        addAltUser(nameValue, ageValue, emailValue)\r\n        setError('')\r\n        setMyAlert(true)\r\n        setShowUsersArray(false)\r\n        setNameValue('')\r\n        setAgeValue('')\r\n        setEmailValue('')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    function onClickCheckboxUsers() {\r\n        setShowUsersArray(!showUsersArray)\r\n    }\r\n\r\n    function onClickContainer() {\r\n        setMyAlert(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.altContainer} >\r\n            <h2>WARNING!!!</h2>\r\n            <hr />\r\n            <div className={s.text}>{'You are in the closed territory of the IT incubator!\\nGive us your registration details.'} </div>\r\n            <hr />\r\n            <div className={s.nameInput}> Your name:\r\n                <input onChange={onChangeNameValue} value={nameValue} />\r\n                (name starts with a-z, may include a number!)\r\n            </div>\r\n            <div className={s.ageInput}>Your age:\r\n                <input onChange={onChangeAgeValue} value={ageValue} />\r\n                (only number!)\r\n            </div>\r\n            <div className={s.emailInput}>Your email:\r\n                <input onChange={onChangeEmailValue} value={emailValue} />\r\n                (for example email: name@mail.com)\r\n            </div>\r\n            <div>\r\n                <button onClick={onClickEnter}>enter</button>\r\n            </div>\r\n            <input onClick={onClickCheckboxUsers} type={'checkbox'} checked={showUsersArray} />command of it-incubator\r\n            {showUsersArray && <div className={s.groupUsers}>{altUsers.map(u => <li key={u.id}  >{`${u.name}  ${u.age}  ${u.email}`}</li>) }</div> }\r\n            <div className={s.altError}>\r\n\r\n                {error && <TextError error={error} />}\r\n\r\n            </div>\r\n\r\n\r\n            {myAlert && <div className={s.myAlertContainer}>\r\n                <div className={s.myAlert}>{`Hi, ${altUsers[0].name}! We very happy, what you trust us.\\nWe will write to you when you need it  ${altUsers[0].email} `}\r\n                <button onClick={onClickContainer}>next</button>\r\n                </div>\r\n            </div> }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\nimport { AlternativeGreeting } from './AlternativeGreeting';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string// need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\nexport type AltUsersType = {\r\n    id: string\r\n    name: string\r\n    age: string\r\n    email: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const getId = () => v1()\r\n    const addUserCallback = (name: string) => {\r\n        const newUsers = [{_id: getId(), name: name}, ...users]\r\n        // need to fix any\r\n        setUsers(newUsers) // need to fix\r\n    }\r\n//AlternativeGreeting\r\n    \r\n    const [altUsers, setAltUsers] = useState<Array<AltUsersType>>([])\r\n\r\n    const addAltUser = (name: string, age: string, email: string) => {\r\n        setAltUsers([\r\n            {id: v1(),\r\n            name: name,\r\n            age: age,\r\n            email: email}, ...altUsers])\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeGreeting altUsers={altUsers} addAltUser={addAltUser}/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","\r\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\nexport type DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className} ` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        debugger\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'enter your text, please!'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n        setText('')\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n\r\n\r\n}\r\nconst spanImg = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSvmShznIZUvegOEeYEvlGdxShi6uz9fwiKnQ&usqp=CAU'\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        <img src={spanImg} />\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\nimport s from './common/c4-SuperEditableSpan/SuperEditableSpan.module.css'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState<string>('editable-span-value', value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div className={s.containerSpan}>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text, please...'}}\r\n                />\r\n            </div>\r\n            <div className={s.containerButton}>\r\n                <SuperButton onClick={save}>save</SuperButton>\r\n                <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n\r\n            <HW6/>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent, FocusEventHandler} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    value?: any\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        value,\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const styleSelect = {\r\n        margin: '10px',\r\n        borderColor: 'green',\r\n        borderRadius: '3px',\r\n        color: 'orange'\r\n    }\r\n    const styleOption = {\r\n        color: \"green\"\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => {\r\n            return (\r\n                <option key={i} selected={o === value} style={styleOption} >\r\n                    {o}\r\n                </option>\r\n            )\r\n        })\r\n        : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps} style={styleSelect}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    name: string\r\n    options?: any[]\r\n    value: any\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const styleInput = {\r\n\r\n\r\n        color: 'orange',\r\n        marginLeft: '5px'\r\n    }\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i} style={o === value ? {color: 'orange'} : {color: 'green'}}>\r\n            <input\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr: Array<string> = ['x', 'y', 'z']\r\n\r\n\r\nexport function HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import {ActionType, UserType} from \"../HW8\";\r\n\r\nexport const homeWorkReducer = (state: Array<UserType>, action: ActionType): Array<UserType> => { // need to fix any\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            const newState = [...state]\r\n            return action.payload === 'up'\r\n                ? newState.sort((a, b) => a.name < b.name ? -1 : 1)\r\n                : newState.sort((a, b) => a.name < b.name ? 1 : -1)\r\n        }\r\n        case 'check': {\r\n\r\n            return state.filter(p => p.age >= action.payload)\r\n        }\r\n        default: return state\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport {homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport s from './hw8.module.css'\r\n\r\nexport type UserType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\nconst initialPeople: Array<UserType> = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<Array<UserType>>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((p: UserType) => (\r\n        <div key={p._id}>\r\n            <span className={s.name}>\r\n                {p.name}\r\n            </span>\r\n           <span className={s.age}>\r\n                {p.age}\r\n            </span>\r\n\r\n        </div>\r\n    ))\r\n\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\r\n    const check18 = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 18}))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n            <div className={s.container}>\r\n            {/*should work (должно работать)*/}\r\n            {finalPeople}\r\n\r\n            <div>\r\n                <SuperButton className={s.button} onClick={sortUp}>sort up</SuperButton>\r\n                <SuperButton className={s.button} onClick={sortDown}>sort down</SuperButton>\r\n                <SuperButton className={s.button} onClick={check18}>check 18</SuperButton>\r\n            </div>\r\n\r\n            </div>\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default HW8\r\n\r\ntype SortActionType = { type: string, payload: string }\r\ntype CheckActionType = { type: string, payload: number }\r\nexport type ActionType = SortActionType | CheckActionType\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new Date())// setDate\r\n        }, 1000)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)// close\r\n    }\r\n    console.log(date)\r\n    const stringTime = date.toTimeString().slice(0,8) // fix with date\r\n    const stringDate =`${date.getFullYear()} 0${date.getMonth() + 1} 0${date.getDate()}`// fix with date\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n                style={{\r\n                    height: '40px',\r\n                    width: '80px',\r\n                    margin: '5px',\r\n                    padding: '5px',\r\n                    border: '1px solid',\r\n                    borderRadius: '5px',\r\n                    backgroundColor: 'darkorange',\r\n                    color: 'whitesmoke',\r\n                }}\r\n            >\r\n                {stringTime}\r\n\r\n\r\n            {show && (\r\n                <div>\r\n\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n            </div>\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton style={{marginLeft: '5px'}}\r\n                         onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","import React from \"react\"\r\n\r\nimport {HW7} from \"../../h7/HW7\"\r\nimport HW8 from \"../../h8/HW8\"\r\nimport HW9 from \"../../h9/HW9\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div style={{margin: '5px'}}>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Junior","import React from \"react\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction JuniorPlus() {\r\n    return <div>\r\n        <h1>Junior+</h1>\r\n    </div>\r\n}\r\nexport default JuniorPlus","import React from 'react'\r\nimport {Redirect, Route, Switch } from 'react-router-dom'\r\nimport PreJunior from './pages/PreJunior'\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from './pages/Junior';\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior+',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\r\n            exact нужен чтоб указать полное совподение (что после '/' ничего не будет)\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                // add routes\r\n\r\n            у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}